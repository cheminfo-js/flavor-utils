{"version":3,"sources":["webpack:///flavor-utils/webpack/universalModuleDefinition","webpack:///flavor-utils/flavor-utils.min.js","webpack:///flavor-utils/webpack/bootstrap b2ec4346a087ec083523","webpack:///flavor-utils/./src/index.js","webpack:///flavor-utils/./~/superagent/lib/client.js","webpack:///flavor-utils/./~/component-emitter/index.js","webpack:///flavor-utils/./~/reduce-component/index.js","webpack:///flavor-utils/./src/Base64.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","saveDoc","opts","doc","Promise","resolve","reject","url","databaseUrl","_id","superagent","post","set","send","end","err","res","body","getView","view","key","x","split","designDoc","viewName","getJSON","encodeURIComponent","JSON","stringify","getList","list","listName","get","deleteDoc","del","query","rev","_rev","updateDoc","put","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","Base64","optionDefaults","FlavorUtils","defaultOpts","defaultOptions","value","options","assign","couchUrl","replace","couchDatabase","source","getOptions","flavor","username","then","doEl","data","meta","newDoc","prom","push","result","undefined","all","arr","flavors","sub","subFolder","filter","v","j","unshift","name","_attachments","content_type","encode","rows","done","console","log","keys","stack","sorted","getTree","row","structure","doElement","current","__data","__view","__meta","__id","__rev","shift","__name","__parents","slice","__parent","api","getFlavor","views","tree","viewCb","dirCb","promise","_loop","startsWith","el","traverseTree","noop","isHost","obj","str","toString","isObject","serialize","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","parseString","parts","pair","len","decodeURIComponent","parseHeader","index","line","field","lines","fields","pop","indexOf","toLowerCase","trim","isJSON","mime","test","type","params","reduce","Response","req","xhr","text","method","responseType","responseText","statusText","setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","parseBody","response","Request","self","Emitter","_query","_header","on","e","Error","parse","original","rawResponse","callback","emit","new_err","request","arguments","fn","window","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","ct","statusCode","statusType","info","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","use","timeout","ms","_timeout","clearTimeout","_timer","abort","aborted","unset","getHeader","_parser","accept","auth","user","pass","btoa","_formData","FormData","append","attach","file","filename","_data","_callback","crossDomainError","crossDomain","timeoutError","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","direction","hasListeners","onprogress","upload","setTimeout","open","contentType","setRequestHeader","fulfill","head","patch","mixin","addEventListener","event","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","listeners","initial","idx","curr","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_utf8_encode","charCodeAt","isNaN","charAt","decode","String","fromCharCode","_utf8_decode","string","utftext","n","c2","c3"],"mappings":"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","file":"flavor-utils.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flavorUtils\"] = factory();\n\telse\n\t\troot[\"flavorUtils\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flavorUtils\"] = factory();\n\telse\n\t\troot[\"flavorUtils\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar superagent = __webpack_require__(1);\n\tvar Base64 = __webpack_require__(4);\n\t\n\tvar optionDefaults = {\n\t    designDoc: 'flavor'\n\t};\n\t\n\t/**\n\t * General options object\n\t * @typedef {object} options\n\t * @property {string} opts.target - target description\n\t * @property {String} username - The target username to which to clone the flavor\n\t * @property {String} designDoc - The design doc to use for views and list queries - Defaults to 'flavor'\n\t * @property {string} flavor - The name of the flavor in the target\n\t * @property {string} couchUrl - Couchdb root url of the target. It can contain username + password if but will be overriden if couchUsername and couchPassword are defined\n\t * @property {string} couchDatabase - the name of the target couchdb database\n\t * @property {string} couchUsername - the username with which to connect to the couchdb database\n\t * @property {string} couchPassword - the password with which to connect to the couchdb database\n\t */\n\t\n\t/**\n\t * This is a description of the MyClass constructor function.\n\t * @class\n\t * @classdesc FlavorUtils class\n\t */\n\t\n\tvar FlavorUtils = function () {\n\t    /**\n\t     * Constructor\n\t     * @param {options} defaultOpts - Default options\n\t     */\n\t\n\t    function FlavorUtils(defaultOpts) {\n\t        _classCallCheck(this, FlavorUtils);\n\t\n\t        this.defaultOptions = defaultOpts;\n\t    }\n\t\n\t    /**\n\t     * Get options object\n\t     * @param {options} opts - An option object to override default options with\n\t     * @returns {object}\n\t     */\n\t\n\t\n\t    _createClass(FlavorUtils, [{\n\t        key: 'getOptions',\n\t        value: function getOptions(opts) {\n\t            var options = Object.assign({}, optionDefaults, this.defaultOptions, opts);\n\t\n\t            if (options.couchUrl) options.couchUrl = options.couchUrl.replace(/\\/$/, '');\n\t            if (options.couchUrl && options.couchDatabase) {\n\t                options.databaseUrl = options.couchUrl + '/' + options.couchDatabase;\n\t            }\n\t            return options;\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param {object} opts - An option object to override default options with\n\t         * @param {options} opts.source - An option object to override default options with\n\t         * @param {options} opts.target - An option object to override default options with\n\t         * @returns {Promise} A promise that resolves with `undefined` if success, or rejects with an error if failure\n\t         */\n\t\n\t    }, {\n\t        key: 'clone',\n\t        value: function clone(opts) {\n\t            opts.source = this.getOptions(opts.source);\n\t            opts.target = this.getOptions(opts.target);\n\t            var key = [opts.source.flavor, opts.source.username];\n\t            return getView(opts.source, opts.source.designDoc + '/docs', key).then(function (res) {\n\t                var result = res.rows;\n\t                if (!result) return;\n\t                var done = Promise.resolve();\n\t                var i = 0;\n\t                for (i = 0; i < result.length; i++) {\n\t                    done = done.then(doEl(i));\n\t                }\n\t                done.then(function () {\n\t                    console.log('all done');\n\t                }, function (err) {\n\t                    console.log('error:', err);\n\t                    return err;\n\t                });\n\t\n\t                function doEl(i) {\n\t                    return function () {\n\t                        var prom = [];\n\t                        var view, data, meta, doc, newDoc;\n\t                        prom.push(getJSON(opts.source.databaseUrl + '/' + result[i].id));\n\t                        if (result[i].value.view) {\n\t                            view = getJSON(opts.source.databaseUrl + '/' + result[i].id + '/view.json');\n\t                            prom.push(view);\n\t                        } else prom.push(undefined);\n\t                        if (result[i].value.data) {\n\t                            data = getJSON(opts.source.databaseUrl + '/' + result[i].id + '/data.json');\n\t                            prom.push(data);\n\t                        } else prom.push(undefined);\n\t                        if (result[i].value.meta) {\n\t                            meta = getJSON(opts.source.databaseUrl + '/' + result[i].id + '/meta.json');\n\t                            prom.push(meta);\n\t                        } else prom.push(undefined);\n\t                        prom = Promise.all(prom).then(function (arr) {\n\t                            doc = arr[0];\n\t                            newDoc = {};\n\t                            var view = arr[1];\n\t                            var data = arr[2];\n\t                            var meta = arr[3];\n\t                            delete doc._rev;\n\t\n\t                            newDoc.flavors = {};\n\t                            var sub = [];\n\t\n\t                            if (opts.target.subFolder && typeof opts.target.subFolder === 'string') {\n\t                                sub = opts.target.subFolder.split('/').filter(function (v) {\n\t                                    return v !== \"\";\n\t                                });\n\t                            }\n\t                            if (sub.length > 0 && doc.flavors[opts.source.flavor]) {\n\t                                if (doc.flavors[opts.source.flavor]) {\n\t                                    var arr = doc.flavors[opts.source.flavor];\n\t                                    for (var j = sub.length - 1; j >= 0; j--) {\n\t                                        arr.unshift(sub[j]);\n\t                                    }\n\t                                    newDoc.flavors[opts.target.flavor] = arr;\n\t                                }\n\t                            } else if (doc.flavors[opts.source.flavor]) {\n\t                                newDoc.flavors[opts.target.flavor] = doc.flavors[opts.source.flavor];\n\t                            }\n\t\n\t                            newDoc.name = opts.target.username;\n\t\n\t                            if (meta) {\n\t                                newDoc._attachments = newDoc._attachments || {};\n\t                                newDoc._attachments['meta.json'] = {\n\t                                    'content_type': 'application/json',\n\t                                    'data': Base64.encode(JSON.stringify(meta))\n\t                                };\n\t                            }\n\t                            if (view) {\n\t                                newDoc._attachments = newDoc._attachments || {};\n\t                                newDoc._attachments['view.json'] = {\n\t                                    'content_type': 'application/json',\n\t                                    'data': Base64.encode(JSON.stringify(view))\n\t                                };\n\t                            }\n\t                            if (data) {\n\t                                newDoc._attachments = newDoc._attachments || {};\n\t                                newDoc._attachments['data.json'] = {\n\t                                    'content_type': 'application/json',\n\t                                    'data': Base64.encode(JSON.stringify(data))\n\t                                };\n\t                            }\n\t                        });\n\t                        return prom.then(function () {\n\t                            return saveDoc(opts.target, newDoc);\n\t                        });\n\t                    };\n\t                }\n\t\n\t                return done;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Delete all views associated to a flavor\n\t         * @param {options} opts - A promise that resolves with `undefined` if success, or rejects with an error if failure\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'del',\n\t        value: function del(opts) {\n\t            opts = this.getOptions(opts);\n\t            var key = [opts.flavor, opts.username];\n\t            return getView(opts, opts.designDoc + '/docs', key).then(function (res) {\n\t                var result = res.rows;\n\t                var done = Promise.resolve();\n\t                for (var i = 0; i < result.length; i++) {\n\t                    done = done.then(doEl(i));\n\t                }\n\t\n\t                done.then(function () {\n\t                    console.log('delete flavor done');\n\t                }, function (err) {\n\t                    console.log('Error!', err, err.stack);\n\t                });\n\t\n\t                function doEl(i) {\n\t                    var prom = getJSON(opts.databaseUrl + '/' + result[i].id);\n\t                    prom = prom.then(function (doc) {\n\t                        delete doc.flavors[opts.flavor];\n\t                        var keys = Object.keys(doc.flavors);\n\t                        if (keys.length === 0) {\n\t                            return deleteDoc(opts, doc);\n\t                        } else {\n\t                            return updateDoc(opts, doc);\n\t                        }\n\t                    });\n\t                    return prom;\n\t                }\n\t\n\t                return done;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Get meta info about documents in a flavor\n\t         * @param {options} opts - An option object to override default options with\n\t         * @param {boolean} sorted - Set to true if documents should be sorted by flavors\n\t         */\n\t\n\t    }, {\n\t        key: 'getFlavor',\n\t        value: function getFlavor(opts, sorted) {\n\t            opts = this.getOptions(opts);\n\t            sorted = sorted === undefined ? true : sorted;\n\t            var key = [opts.flavor, opts.username];\n\t            if (sorted) {\n\t                return getList(opts, opts.designDoc + '/sort', 'docs', key);\n\t            }\n\t            return getView(opts, opts.designDoc + '/docs', key);\n\t        }\n\t\n\t        /**\n\t         * Check if this flavor has views associated with it\n\t         * @param {options} opts - An option object to override default options with\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'hasViews',\n\t        value: function hasViews(opts) {\n\t            opts = this.getOptions(opts);\n\t            var key = [opts.flavor, opts.username];\n\t            return getView(opts, opts.designDoc + '/docs', key).then(function (res) {\n\t                return !(res.rows && res.rows.length === 0);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Get views tree for a flavor\n\t         * @param {options} opts - An option object to override default options with\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTree',\n\t        value: function getTree(opts) {\n\t            if (opts.couchUrl) {\n\t                return api.getFlavor(opts).then(function (views) {\n\t                    if (views.rows) views = views.rows;\n\t                    return getTree(views);\n\t                });\n\t            } else {\n\t                return Promise.resolve(getTree(opts));\n\t            }\n\t\n\t            function getTree(rows) {\n\t                var row,\n\t                    structure = {};\n\t                Object.defineProperty(structure, '__root', { enumerable: false, writable: true, value: true });\n\t                for (var i = 0; i < rows.length; i++) {\n\t                    row = rows[i];\n\t                    var flavors = row.value.flavors;\n\t                    doElement(flavors, structure, row.value);\n\t                }\n\t                return structure;\n\t            }\n\t\n\t            function doElement(flavors, current, row) {\n\t                if (!flavors.length) {\n\t                    current.__data = row.data;\n\t                    current.__view = row.view;\n\t                    current.__meta = row.meta;\n\t                    current.__id = row._id;\n\t                    current.__rev = row._rev;\n\t                    return;\n\t                }\n\t\n\t                var flavor = flavors.shift();\n\t                if (!current[flavor]) {\n\t                    current[flavor] = {\n\t                        __name: flavor,\n\t                        __parents: current.__parents ? current.__parents.slice() : [],\n\t                        __parent: current\n\t                    };\n\t                    if (current.__name) current[flavor].__parents.push(current.__name);\n\t                    //if(current.__parents) console.log(current.__parents)\n\t                }\n\t\n\t                return doElement(flavors, current[flavor], row);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Traverse a tree\n\t         * @param {object} tree - A tree such as returned by getTree\n\t         * @param {function} viewCb - A callback called on each view\n\t         * @param {function} dirCb - A callback called on each 'directory'\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'traverseTree',\n\t        value: function traverseTree(tree, viewCb, dirCb) {\n\t            var promise = Promise.resolve();\n\t\n\t            var _loop = function _loop(key) {\n\t                if (key.startsWith('__')) return 'continue';\n\t                var el = tree[key];\n\t                if (el.__id) {\n\t                    // Element is a view\n\t                    if (viewCb) promise = promise.then(function () {\n\t                        return viewCb(el);\n\t                    });\n\t                } else if (key !== '__root') {\n\t                    // Element is a directory\n\t                    if (dirCb) promise = promise.then(function () {\n\t                        return dirCb(el);\n\t                    });\n\t                    promise = promise.then(function () {\n\t                        return api.traverseTree(el, viewCb, dirCb);\n\t                    });\n\t                }\n\t            };\n\t\n\t            for (var key in tree) {\n\t                var _ret = _loop(key);\n\t\n\t                if (_ret === 'continue') continue;\n\t            }\n\t            return promise;\n\t        }\n\t    }]);\n\t\n\t    return FlavorUtils;\n\t}();\n\t\n\tmodule.exports = FlavorUtils;\n\t\n\tfunction saveDoc(opts, doc) {\n\t    return new Promise(function (resolve, reject) {\n\t        var url = opts.databaseUrl;\n\t        delete doc._id;\n\t        superagent.post(url).set('Content-Type', 'application/json').send(doc).end(function (err, res) {\n\t            if (err) {\n\t                return reject(err);\n\t            }\n\t            resolve(res.body);\n\t        });\n\t    });\n\t}\n\t\n\tfunction getView(opts, view, key) {\n\t    var x = view.split('/');\n\t    var designDoc = '_design/' + x[0];\n\t    var viewName = x[1];\n\t\n\t    return getJSON(opts.databaseUrl + '/' + designDoc + '/_view/' + viewName + '?key=' + encodeURIComponent(JSON.stringify(key)));\n\t}\n\t\n\tfunction getList(opts, list, view, key) {\n\t    var x = list.split('/');\n\t    var designDoc = '_design/' + x[0];\n\t    var listName = x[1];\n\t\n\t    return getJSON(opts.databaseUrl + '/' + designDoc + '/_list/' + listName + '/' + view + '?key=' + encodeURIComponent(JSON.stringify(key)));\n\t}\n\t\n\tfunction getUUIDs(opts, count) {\n\t    count = count || 1;\n\t    return getJSON(opts.couchUrl + '/_uuids?count=' + count);\n\t}\n\t\n\tfunction getJSON(url) {\n\t    return new Promise(function (resolve, reject) {\n\t        superagent.get(url).set('Accept', 'application/json').end(function (err, res) {\n\t            if (err) {\n\t                return reject(err);\n\t            }\n\t            resolve(res.body);\n\t        });\n\t    });\n\t}\n\t\n\tfunction deleteDoc(opts, doc) {\n\t    return new Promise(function (resolve, reject) {\n\t        var url = opts.databaseUrl + '/' + doc._id;\n\t        superagent.del(url).query({ rev: doc._rev }).end(function (err, res) {\n\t            if (err) {\n\t                return reject(err);\n\t            }\n\t            resolve(res);\n\t        });\n\t    });\n\t}\n\t\n\tfunction updateDoc(opts, doc) {\n\t    return new Promise(function (resolve, reject) {\n\t        var url = opts.databaseUrl + '/' + doc._id;\n\t        superagent.put(url).set('Content-Type', 'application/json').send(doc).end(function (err, res) {\n\t            if (err) {\n\t                return reject(err);\n\t            }\n\t            resolve(res.body);\n\t        });\n\t    });\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Emitter = __webpack_require__(2);\n\tvar reduce = __webpack_require__(3);\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  root = this;\n\t}\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj === Object(obj);\n\t}\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    if (null != obj[key]) {\n\t      pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t        }\n\t      }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (Array.isArray(val)) {\n\t    return val.forEach(function(v) {\n\t      pushEncodedKeyValuePair(pairs, key, v);\n\t    });\n\t  }\n\t  pairs.push(encodeURIComponent(key)\n\t    + '=' + encodeURIComponent(val));\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var parts;\n\t  var pair;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    parts = pair.split('=');\n\t    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return reduce(str.split(/ *; */), function(obj, str){\n\t    var parts = str.split(/ *= */)\n\t      , key = parts.shift()\n\t      , val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this.setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this.setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this.parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype.parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  Emitter.call(this);\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {};\n\t  this._header = {};\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    if (err) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    if (res.status >= 200 && res.status < 300) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t    new_err.original = err;\n\t    new_err.response = res;\n\t    new_err.status = res.status;\n\t\n\t    self.callback(new_err, res);\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\tRequest.prototype.use = function(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.timeout = function(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.clearTimeout = function(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  if (this.aborted) return;\n\t  this.aborted = true;\n\t  this.xhr.abort();\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tRequest.prototype.getHeader = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Force given parser\n\t *\n\t * Sets the body parser no matter type.\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.parse = function(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass){\n\t  var str = btoa(user + ':' + pass);\n\t  this.set('Authorization', 'Basic ' + str);\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.field = function(name, val){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(field, file, filename || file.name);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t  *      request.post('/user')\n\t  *        .send('name=tobi')\n\t  *        .send('species=ferret')\n\t  *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this.getHeader('Content-Type');\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    if (!type) this.type('form');\n\t    type = this.getHeader('Content-Type');\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || isHost(data)) return this;\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.withCredentials = function(){\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var query = this._query.join('&');\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self.timeoutError();\n\t      if (self.aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = 'download';\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  if (query) {\n\t    query = request.serializeObject(query);\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t\n\t  // initiate request\n\t  xhr.open(this.method, this.url, true);\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this.getHeader('Content-Type');\n\t    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Faux promise support\n\t *\n\t * @param {Function} fulfill\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\tRequest.prototype.then = function (fulfill, reject) {\n\t  return this.end(function(err, res) {\n\t    err ? reject(err) : fulfill(res);\n\t  });\n\t}\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new Request('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (1 == arguments.length) {\n\t    return new Request('GET', method);\n\t  }\n\t\n\t  return new Request(method, url);\n\t}\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Reduce `arr` with `fn`.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @param {Mixed} initial\n\t *\n\t * TODO: combatible error handling?\n\t */\n\t\n\tmodule.exports = function(arr, fn, initial){  \n\t  var idx = 0;\n\t  var len = arr.length;\n\t  var curr = arguments.length == 3\n\t    ? initial\n\t    : arr[idx++];\n\t\n\t  while (idx < len) {\n\t    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\t  }\n\t  \n\t  return curr;\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t *\n\t *  Base64 encode / decode\n\t *  http://www.webtoolkit.info/\n\t *  https://gist.github.com/Nowalon/6579878\n\t **/\n\t\n\tvar Base64 = module.exports = {\n\t\n\t    // private property\n\t    _keyStr: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\t\n\t    // public method for encoding\n\t    encode: function encode(input) {\n\t        var output = \"\";\n\t        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n\t        var i = 0;\n\t\n\t        input = Base64._utf8_encode(input);\n\t\n\t        while (i < input.length) {\n\t\n\t            chr1 = input.charCodeAt(i++);\n\t            chr2 = input.charCodeAt(i++);\n\t            chr3 = input.charCodeAt(i++);\n\t\n\t            enc1 = chr1 >> 2;\n\t            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n\t            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n\t            enc4 = chr3 & 63;\n\t\n\t            if (isNaN(chr2)) {\n\t                enc3 = enc4 = 64;\n\t            } else if (isNaN(chr3)) {\n\t                enc4 = 64;\n\t            }\n\t\n\t            output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n\t        }\n\t\n\t        return output;\n\t    },\n\t\n\t    // public method for decoding\n\t    decode: function decode(input) {\n\t        var output = \"\";\n\t        var chr1, chr2, chr3;\n\t        var enc1, enc2, enc3, enc4;\n\t        var i = 0;\n\t\n\t        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\t\n\t        while (i < input.length) {\n\t\n\t            enc1 = this._keyStr.indexOf(input.charAt(i++));\n\t            enc2 = this._keyStr.indexOf(input.charAt(i++));\n\t            enc3 = this._keyStr.indexOf(input.charAt(i++));\n\t            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\t\n\t            chr1 = enc1 << 2 | enc2 >> 4;\n\t            chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n\t            chr3 = (enc3 & 3) << 6 | enc4;\n\t\n\t            output = output + String.fromCharCode(chr1);\n\t\n\t            if (enc3 != 64) {\n\t                output = output + String.fromCharCode(chr2);\n\t            }\n\t            if (enc4 != 64) {\n\t                output = output + String.fromCharCode(chr3);\n\t            }\n\t        }\n\t\n\t        output = Base64._utf8_decode(output);\n\t\n\t        return output;\n\t    },\n\t\n\t    // private method for UTF-8 encoding\n\t    _utf8_encode: function _utf8_encode(string) {\n\t        string = string.replace(/\\r\\n/g, \"\\n\");\n\t        var utftext = \"\";\n\t\n\t        for (var n = 0; n < string.length; n++) {\n\t\n\t            var c = string.charCodeAt(n);\n\t\n\t            if (c < 128) {\n\t                utftext += String.fromCharCode(c);\n\t            } else if (c > 127 && c < 2048) {\n\t                utftext += String.fromCharCode(c >> 6 | 192);\n\t                utftext += String.fromCharCode(c & 63 | 128);\n\t            } else {\n\t                utftext += String.fromCharCode(c >> 12 | 224);\n\t                utftext += String.fromCharCode(c >> 6 & 63 | 128);\n\t                utftext += String.fromCharCode(c & 63 | 128);\n\t            }\n\t        }\n\t\n\t        return utftext;\n\t    },\n\t\n\t    // private method for UTF-8 decoding\n\t    _utf8_decode: function _utf8_decode(utftext) {\n\t        var string = \"\";\n\t        var i = 0;\n\t        var c = 0,\n\t            c1 = 0,\n\t            c2 = 0;\n\t\n\t        while (i < utftext.length) {\n\t\n\t            c = utftext.charCodeAt(i);\n\t\n\t            if (c < 128) {\n\t                string += String.fromCharCode(c);\n\t                i++;\n\t            } else if (c > 191 && c < 224) {\n\t                c2 = utftext.charCodeAt(i + 1);\n\t                string += String.fromCharCode((c & 31) << 6 | c2 & 63);\n\t                i += 2;\n\t            } else {\n\t                c2 = utftext.charCodeAt(i + 1);\n\t                var c3 = utftext.charCodeAt(i + 2);\n\t                string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n\t                i += 3;\n\t            }\n\t        }\n\t\n\t        return string;\n\t    }\n\t\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** flavor-utils.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b2ec4346a087ec083523\n **/","'use strict';\n\nconst superagent = require('superagent');\nconst Base64 = require('./Base64');\n\nconst optionDefaults = {\n    designDoc: 'flavor'\n};\n\n\n/**\n * General options object\n * @typedef {object} options\n * @property {string} opts.target - target description\n * @property {String} username - The target username to which to clone the flavor\n * @property {String} designDoc - The design doc to use for views and list queries - Defaults to 'flavor'\n * @property {string} flavor - The name of the flavor in the target\n * @property {string} couchUrl - Couchdb root url of the target. It can contain username + password if but will be overriden if couchUsername and couchPassword are defined\n * @property {string} couchDatabase - the name of the target couchdb database\n * @property {string} couchUsername - the username with which to connect to the couchdb database\n * @property {string} couchPassword - the password with which to connect to the couchdb database\n */\n\n/**\n * This is a description of the MyClass constructor function.\n * @class\n * @classdesc FlavorUtils class\n */\nclass FlavorUtils {\n    /**\n     * Constructor\n     * @param {options} defaultOpts - Default options\n     */\n    constructor(defaultOpts) {\n        this.defaultOptions = defaultOpts;\n    }\n\n    /**\n     * Get options object\n     * @param {options} opts - An option object to override default options with\n     * @returns {object}\n     */\n    getOptions(opts) {\n        const options = Object.assign({}, optionDefaults, this.defaultOptions, opts);\n\n        if (options.couchUrl) options.couchUrl = options.couchUrl.replace(/\\/$/, '');\n        if (options.couchUrl && options.couchDatabase) {\n            options.databaseUrl = options.couchUrl + '/' + options.couchDatabase;\n        }\n        return options;\n    }\n\n    /**\n     *\n     * @param {object} opts - An option object to override default options with\n     * @param {options} opts.source - An option object to override default options with\n     * @param {options} opts.target - An option object to override default options with\n     * @returns {Promise} A promise that resolves with `undefined` if success, or rejects with an error if failure\n     */\n    clone (opts) {\n        opts.source = this.getOptions(opts.source);\n        opts.target = this.getOptions(opts.target);\n        var key = [opts.source.flavor, opts.source.username];\n        return getView(opts.source, `${opts.source.designDoc}/docs`, key).then(function (res) {\n            var result = res.rows;\n            if (!result) return;\n            var done = Promise.resolve();\n            var i = 0;\n            for (i = 0; i < result.length; i++) {\n                done = done.then(doEl(i));\n            }\n            done.then(function () {\n                console.log('all done');\n            }, function (err) {\n                console.log('error:', err);\n                return err;\n            });\n\n\n            function doEl(i) {\n                return function () {\n                    var prom = [];\n                    var view, data, meta, doc, newDoc;\n                    prom.push(getJSON(opts.source.databaseUrl + '/' + result[i].id));\n                    if (result[i].value.view) {\n                        view = getJSON(opts.source.databaseUrl + '/' + result[i].id + '/view.json');\n                        prom.push(view);\n                    }\n                    else prom.push(undefined);\n                    if (result[i].value.data) {\n                        data = getJSON(opts.source.databaseUrl + '/' + result[i].id + '/data.json');\n                        prom.push(data);\n                    }\n                    else prom.push(undefined);\n                    if (result[i].value.meta) {\n                        meta = getJSON(opts.source.databaseUrl + '/' + result[i].id + '/meta.json');\n                        prom.push(meta);\n                    }\n                    else prom.push(undefined);\n                    prom = Promise.all(prom).then(function (arr) {\n                        doc = arr[0];\n                        newDoc = {};\n                        var view = arr[1];\n                        var data = arr[2];\n                        var meta = arr[3];\n                        delete doc._rev;\n\n                        newDoc.flavors = {};\n                        var sub = [];\n\n                        if (opts.target.subFolder && typeof opts.target.subFolder === 'string') {\n                            sub = opts.target.subFolder.split('/').filter(function (v) {\n                                return v !== \"\"\n                            });\n                        }\n                        if (sub.length > 0 && doc.flavors[opts.source.flavor]) {\n                            if (doc.flavors[opts.source.flavor]) {\n                                var arr = doc.flavors[opts.source.flavor];\n                                for (var j = sub.length - 1; j >= 0; j--) {\n                                    arr.unshift(sub[j]);\n                                }\n                                newDoc.flavors[opts.target.flavor] = arr;\n                            }\n                        }\n                        else if (doc.flavors[opts.source.flavor]) {\n                            newDoc.flavors[opts.target.flavor] = doc.flavors[opts.source.flavor];\n                        }\n\n                        newDoc.name = opts.target.username;\n\n                        if (meta) {\n                            newDoc._attachments = newDoc._attachments || {};\n                            newDoc._attachments['meta.json'] = {\n                                'content_type': 'application/json',\n                                'data': Base64.encode(JSON.stringify(meta))\n                            };\n                        }\n                        if (view) {\n                            newDoc._attachments = newDoc._attachments || {};\n                            newDoc._attachments['view.json'] = {\n                                'content_type': 'application/json',\n                                'data': Base64.encode(JSON.stringify(view))\n                            };\n                        }\n                        if (data) {\n                            newDoc._attachments = newDoc._attachments || {};\n                            newDoc._attachments['data.json'] = {\n                                'content_type': 'application/json',\n                                'data': Base64.encode(JSON.stringify(data))\n                            };\n                        }\n                    });\n                    return prom.then(function () {\n                        return saveDoc(opts.target, newDoc);\n                    });\n                }\n            }\n\n            return done;\n        });\n    }\n\n    /**\n     * Delete all views associated to a flavor\n     * @param {options} opts - A promise that resolves with `undefined` if success, or rejects with an error if failure\n     * @returns {Promise}\n     */\n    del (opts) {\n        opts = this.getOptions(opts);\n        var key = [opts.flavor, opts.username];\n        return getView(opts, `${opts.designDoc}/docs`, key).then(function (res) {\n            var result = res.rows;\n            var done = Promise.resolve();\n            for (var i = 0; i < result.length; i++) {\n                done = done.then(doEl(i));\n            }\n\n            done.then(function () {\n                console.log('delete flavor done');\n            }, function (err) {\n                console.log('Error!', err, err.stack);\n            });\n\n            function doEl(i) {\n                var prom = getJSON(opts.databaseUrl + '/' + result[i].id);\n                prom = prom.then(function (doc) {\n                    delete doc.flavors[opts.flavor];\n                    var keys = Object.keys(doc.flavors);\n                    if (keys.length === 0) {\n                        return deleteDoc(opts, doc);\n                    }\n                    else {\n                        return updateDoc(opts, doc);\n                    }\n                });\n                return prom;\n            }\n\n            return done;\n        });\n    }\n\n    /**\n     * Get meta info about documents in a flavor\n     * @param {options} opts - An option object to override default options with\n     * @param {boolean} sorted - Set to true if documents should be sorted by flavors\n     */\n    getFlavor(opts, sorted) {\n        opts = this.getOptions(opts);\n        sorted = sorted === undefined ? true : sorted;\n        var key = [opts.flavor, opts.username];\n        if(sorted) {\n            return getList(opts, `${opts.designDoc}/sort`, 'docs', key);\n        }\n        return getView(opts, `${opts.designDoc}/docs`, key);\n    }\n\n    /**\n     * Check if this flavor has views associated with it\n     * @param {options} opts - An option object to override default options with\n     * @returns {Promise}\n     */\n    hasViews(opts) {\n        opts = this.getOptions(opts);\n        var key = [opts.flavor, opts.username];\n        return getView(opts, `${opts.designDoc}/docs`, key).then(function (res) {\n            return !(res.rows && res.rows.length === 0);\n        });\n    }\n\n    /**\n     * Get views tree for a flavor\n     * @param {options} opts - An option object to override default options with\n     * @returns {Promise}\n     */\n    getTree(opts) {\n        if (opts.couchUrl) {\n            return api.getFlavor(opts).then(function (views) {\n                if(views.rows) views = views.rows;\n                return getTree(views);\n            });\n        } else {\n            return Promise.resolve(getTree(opts));\n        }\n\n        function getTree(rows) {\n            var row, structure = {};\n            Object.defineProperty(structure, '__root', {enumerable: false, writable: true, value: true});\n            for (var i = 0; i < rows.length; i++) {\n                row = rows[i];\n                var flavors = row.value.flavors;\n                doElement(flavors, structure, row.value);\n            }\n            return structure;\n        }\n\n        function doElement(flavors, current, row) {\n            if (!flavors.length) {\n                current.__data = row.data;\n                current.__view = row.view;\n                current.__meta = row.meta;\n                current.__id = row._id;\n                current.__rev = row._rev;\n                return;\n            }\n\n            var flavor = flavors.shift();\n            if (!current[flavor]) {\n                current[flavor] = {\n                    __name: flavor,\n                    __parents: current.__parents ? current.__parents.slice() : [],\n                    __parent: current\n                };\n                if(current.__name) current[flavor].__parents.push(current.__name);\n                //if(current.__parents) console.log(current.__parents)\n            }\n\n            return doElement(flavors, current[flavor], row);\n        }\n    }\n\n    /**\n     * Traverse a tree\n     * @param {object} tree - A tree such as returned by getTree\n     * @param {function} viewCb - A callback called on each view\n     * @param {function} dirCb - A callback called on each 'directory'\n     * @returns {Promise}\n     */\n    traverseTree (tree, viewCb, dirCb) {\n        let promise = Promise.resolve();\n        for (let key in tree) {\n            if (key.startsWith('__')) continue;\n            let el = tree[key];\n            if (el.__id) { // Element is a view\n                if(viewCb) promise = promise.then(function() {\n                    return viewCb(el);\n                });\n            } else if (key !== '__root') { // Element is a directory\n                if(dirCb) promise = promise.then(function() {\n                    return dirCb(el);\n                });\n                promise = promise.then(function() {\n                    return api.traverseTree(el, viewCb, dirCb);\n                });\n            }\n        }\n        return promise;\n    }\n\n\n}\n\nmodule.exports = FlavorUtils;\n\nfunction saveDoc(opts, doc) {\n    return new Promise(function (resolve, reject) {\n        var url = opts.databaseUrl;\n        delete doc._id;\n        superagent\n            .post(url)\n            .set('Content-Type', 'application/json')\n            .send(doc)\n            .end(function (err, res) {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(res.body);\n            })\n    });\n}\n\nfunction getView(opts, view, key) {\n    var x = view.split('/');\n    var designDoc = '_design/' + x[0];\n    var viewName = x[1];\n\n    return getJSON(opts.databaseUrl + '/' + designDoc + '/_view/' + viewName + '?key=' + encodeURIComponent(JSON.stringify(key)));\n}\n\nfunction getList(opts, list, view, key) {\n    var x = list.split('/');\n    var designDoc = '_design/' + x[0];\n    var listName = x[1];\n\n    return getJSON(opts.databaseUrl + '/' + designDoc + '/_list/' + listName + '/' + view + '?key=' + encodeURIComponent(JSON.stringify(key)));\n}\n\nfunction getUUIDs(opts, count) {\n    count = count || 1;\n    return getJSON(opts.couchUrl + '/_uuids?count=' + count);\n}\n\nfunction getJSON(url) {\n    return new Promise(function (resolve, reject) {\n        superagent\n            .get(url)\n            .set('Accept', 'application/json')\n            .end(function (err, res) {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(res.body);\n            })\n    });\n}\n\nfunction deleteDoc(opts, doc) {\n    return new Promise(function (resolve, reject) {\n        var url = opts.databaseUrl + '/' + doc._id;\n        superagent\n            .del(url)\n            .query({rev: doc._rev})\n            .end(function (err, res) {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(res);\n            })\n    });\n}\n\nfunction updateDoc(opts, doc) {\n    return new Promise(function (resolve, reject) {\n        var url = opts.databaseUrl + '/' + doc._id;\n        superagent\n            .put(url)\n            .set('Content-Type', 'application/json')\n            .send(doc)\n            .end(function (err, res) {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(res.body);\n            })\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nRequest.prototype.parse = function(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename || file.name);\n  return this;\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 1\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-emitter/index.js\n ** module id = 2\n ** module chunks = 0\n **/","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-component/index.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\n/**\n *\n *  Base64 encode / decode\n *  http://www.webtoolkit.info/\n *  https://gist.github.com/Nowalon/6579878\n **/\n\n\nvar Base64 = module.exports = {\n\n    // private property\n    _keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n    // public method for encoding\n    encode : function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = Base64._utf8_encode(input);\n\n        while (i < input.length) {\n\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n\n        }\n\n        return output;\n    },\n\n    // public method for decoding\n    decode : function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n\n        }\n\n        output = Base64._utf8_decode(output);\n\n        return output;\n\n    },\n\n    // private method for UTF-8 encoding\n    _utf8_encode : function (string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    },\n\n    // private method for UTF-8 decoding\n    _utf8_decode : function (utftext) {\n        var string = \"\";\n        var i = 0;\n        var c = 0, c1 = 0, c2 = 0;\n\n        while ( i < utftext.length ) {\n\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            }\n            else if((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i+1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            }\n            else {\n                c2 = utftext.charCodeAt(i+1);\n                var c3 = utftext.charCodeAt(i+2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n\n        }\n\n        return string;\n    }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Base64.js\n **/"],"sourceRoot":""}